

class Solution {
    private:
    bool bfs(int node, int color[], vector<int>adj[])
    {
        color[node]=0;
        queue<int>q;
        q.push(node);
        while(!q.empty())
        {
            int temp=q.front();
            q.pop();
           for(auto adjacent:adj[temp])
            {
                
                if(color[adjacent]==-1)
                {
                    q.push(adjacent);
                    color[adjacent]=!color[temp];
                    
                }
                else if(color[adjacent]==color[temp])
                    return false;
                    
                    
                    
                    
                    
                
                
                
                
                
            }
        }
        return true;
    }
public:
	bool isBipartite(int V, vector<int>adj[]){
	    int color[V];
	    for(int i=0;i<V;i++)
	    {
	        color[i]=-1;
	    }
	    for(int i=0;i<V;i++)
	    {
	        if(color[i]==-1)
	        {
	            if(bfs(i,color,adj)==false)
	            return false;
	        }
	    }
	    return true;
	    
	    
	}

};
