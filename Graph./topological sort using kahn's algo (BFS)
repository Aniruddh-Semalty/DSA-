                                            //topological sort using kahns algo (BFS)

#include <bits/stdc++.h> 
void createAdjList( vector<vector<int>>&adjList,vector<vector<int>>&edges,int &e)
{
  for (int i = 0; i < e; i++) {
    int u = edges[i][0];
    int v=edges[i][1];
    adjList[u].push_back(v);
  }
}








vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
        vector<vector<int>>adjList(v);

        //  unordered_map<int,list<int>>adjList;
        
        createAdjList(adjList,edges,e);
        
        queue<int>q;
        
        vector<int>indegree(v);
        
        
      vector<int>ans;
    
        for(auto i :adjList)
        {
          for(auto j:i)
          {
              indegree[j]++;
          }
        }
        for(int i=0;i<v;i++)
        {
            if(indegree[i]==0)
            {
                q.push(i);
            }
        }
        while(!q.empty())
        {
           int node=q.front();
           q.pop();
           ans.push_back(node);
           for(int neighbour:adjList[node])
           {
               indegree[neighbour]--;
               if(indegree[neighbour]==0)
               {
                   q.push(neighbour);
               }
           }

        }

      
       
        return ans;









}
